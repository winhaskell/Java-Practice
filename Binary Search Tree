二叉查找树 Binary Search Tree

https://blog.csdn.net/sheepmu/article/details/38407221
https://www.cnblogs.com/gaochundong/p/binary_search_tree.html
https://www.cnblogs.com/Xieyang-blog/p/9111962.html
https://blog.csdn.net/sheepmu/article/details/38407221
https://ichrisking.github.io/2016/12/12/bin-tree/
https://blog.csdn.net/Evankaka/article/details/48088241 


public class binaryTreeNode {  
    public int data;     
    public binaryTreeNode leftNode; 
    public binaryTreeNode rightNode; 
    public binaryTreeNode(){}  
    public binaryTreeNode(int Key)
    {  
        this.data = Key;  
    }  
}  


二叉搜索树 

是否是二叉搜索树
查询节点 添加节点 删除节点 遍历 最大值 最小值 


找到所有的树叶

public void visitNode(Node node) 
{
    if(node.left != null) {
        visitNode(node.left);
    }
    if(node.right != null) {
        visitNode(node.right);
    }
    if(node.left == null && node.right == null) {
      // leafnode
    }
}

visitNode(root);



Binary Search Tree is a node-based binary tree data structure which has the following properties:
二叉搜索树的特点:
The left subtree of a node contains only nodes with keys lesser than the node’s key.
The right subtree of a node contains only nodes with keys greater than the node’s key.
The left and right subtree each must also be a binary search tree.


      288
     /   \
   100   399
  /   \     \
 2    107   560

二叉排序树(Binary Sort Tree)又称二叉查找(搜索)树(Binary Search Tree)。
定义为：二叉排序树或者是空树，或者是满足如下性质的二叉树：
       若它的左子树非空，则左子树上所有结点的值均小于根结点的值；
       若它的右子树非空，则右子树上所有结点的值均大于根结点的值；
       左、右子树也是一棵二叉排序树。


----------------------------------------------


Binary Tree to Binary Search Tree Conversion
Given a Binary Tree, convert it to a Binary Search Tree. 
The conversion must be done in such a way that keeps the original structure of Binary Tree.

Examples.

Input:
          100
         /  \
        1    7
       / \
      8   6

Output:
          8
         /  \
        6    100
       / \
      1   7




