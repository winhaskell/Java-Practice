  Given two binary trees, write a function to check if they are equal or not. 
  Two binary trees are considered equal if they are structurally identical and the nodes have the same value. 
  
  Two binary trees are considered the same if they have identical structure and nodes have the same value.
  This problem can be solved by using a simple recursive function.
 
 
   
Example 1:

Input:     1         1
          / \       / \
         2   3     2   3

        [1,2,3],   [1,2,3]

Output: true



Example 2:

Input:     1         1
          /           \
         2             2

        [1,2],     [1,null,2]

Output: false



Example 3:

Input:     1         1
          / \       / \
         2   1     1   2

        [1,2,1],   [1,1,2]

Output: false



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 
public boolean isSameTree(TreeNode p, TreeNode q) {
    if(p==null && q==null) {
        return true;
    } 
    else if(p==null || q==null){
        return false;
    }
    if(p.val==q.val){
        return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
    }else{
        return false;
    }
}








